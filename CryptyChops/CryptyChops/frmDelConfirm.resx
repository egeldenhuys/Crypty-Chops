<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAAAAEAIACoEAAARgAAACAgAAABAAgAqAgAAO4QAAAQEAAAAQAgAGgEAACWGQAAEBAAAAEA
        CABoBQAA/h0AACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAZAwMDSgQEBGsCAgJ8AQEBhAEBAYQAAACEAAAAhAAAAIQAAACFAAAAhQAAAIUAAACFAAAAhQEB
        AYUBAQGFAQEBhQEBAYUBAQGFAQEBhQEBAYUBAQGEAgICfAQEBGsDAwNKAAAAGQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAoKChkKCgpLJycndExMTJNXV1ejVFRUo1FRUaNOTk6jTkxMo0xMTKNMSkqkSUVFpEdC
        QqRHQUGkSUFBpEpERKRNRUWkT0lJpFJMTKRVT0+kWVFRo1xWVqNRSkqTKSUldA0NDUwKCgoZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAExMTGhYWFk9eXl6Hqampwru7u+C1tbXgsLCw4Kurq+CpqKjgqKen4KWi
        ouGgmJjhnZOT4Z2Pj+Gej4/ho5SU4aeYmOGunp7htKWl4bqrq+HBsbHgyLm54LOmpsNjXV2IGRkZUBwc
        HBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJycaJiYmT3Nzc4+9vb3az8/P/8fHx//BwcH/vr6+/7u6
        uv+5uLj/tLGx/62np/+qoKD/qZ2d/6qenv+voqL/tKen/7uurv/CtbX/yry8/9HExP/ZzMz/xru72ndy
        cpEoKChRJSUlGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADo6Oho7OztNc3NzjaioqNmzs7P/rKys/6en
        p/+lpaX/oqKi/56env+Yl5f/j42N/4qHh/+JhYX/ioaG/46Kiv+Tj4//mZWV/6CcnP+oo6P/r6ur/7ay
        sv+qp6fac3Jyjzw8PFA4ODgbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWE46GllPO02DfXKKrKql0LWz
        r/KuqqXwqqWh8KunpPGppqTypqWk9aCfnfSXlJLwko6L75CMie+RjInvlJCL75eTju+bl5PvoZyY76ej
        nu+uqqXwtbKu8qyppNGBe3CMV009T1hOOhoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6Xi8beV8pUKKP
        b4fQx7jA2tLI2dTIutLRxLfR1Mi+1NfNxdnZ087g1tLM3s/HvtPMwbfOyb6zzsm9sc7KvK7Py7ytz8u8
        rtDNv6/Q0MCx0NPHutPa0cbZ0MS1wKGObIh5XylQel4vGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI1n
        JRuKZyJRspttheTWxLjy5NjN69rIxOvXw8Hv3s3F8uTZzPbv5tf27+fV8+fcx/Dj1MDu4NC/7dzKv+zZ
        xb/q1cG/6dS/wOjUvcDo1L3A69nExPHi083k1cC4splrhYpnIlGNZyUbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAjWclG4lpI1CznG6E5NfEt/Lk2M3r2sjE69fDwe/ezcXy5tnN9u7n2Pfw6Nj169/M8ubYxfDg
        0sLt3MzB7NjHwOrVwb/p1L/A6NS9wOjUvcDr2cTE8eLTzeTVwbezmmyEiWkjUI1nJRsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACJaycaimojT7WcboTk18S38uTYzevayMTr18PB793PxvHj18716N/c8+LY4O3M
        vdrqybjT7trJyu/f0MXs28nC69fDwenUwMDo1L3A6NS9wOvZxMTx4tPN5NXBt7WabISKaiNPiWsnGgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIlrJxqKaiZPtZ1wg+TXxbfy5NjN69rIxOzXw8Lv3s/H8d/U0vHd
        0uLqxLXt3Zd/8NuZfunqyrjW8uTVy+/dzsfr2cbD6dTAwejUvcDo1L3A69nExPHi083k1cG3tZtug4pq
        Jk+JaycaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiWsnGoxrJ061nXCD5dfFt/Lk2M3r2sjE7NfFwu/g
        0cnv1snW68Gy6eGkkPbWfmH71oBi9eOsl+XpxLLa6cWx1ejHss/pzrrJ6tK+xejTvsLr2cTE8eLTzeTW
        wbe1nW6DjGsnTolrJxoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJaycajGsnTraecYLl18W38uTYzeva
        yMTr2cXD7+DRy+vJt9rfmoDw2IJj+9Z5W/vWelz52IVn9dyNcfHdl3vs4aeP5OfEr9nr0r/O6NK+xevZ
        xMTx4tPN5NbBt7acb4KMaydOiWsnGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIlrJxqObSdNt55ygeXZ
        xrby5NjN69rIxOvZxcPv4NHL68m42t+agPDZg2T72Htd+9h8XvnZhGf23I1w8t6UevDgo4rq57mk4+nI
        tNfp0LvJ69nHxfHi1M3k1sG2t55wgY5tJ02JaycaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjnAoGZBr
        KEy3n3OA5dnGtvLk2M3r2sjE7NfFwu/g0cnv18rW7MOz6eWok/bchmf724Zo9uaumeXqw7De6L2p3ue2
        oeLkrZfn5rOd4ejLtc7t3MnI8ePWzuTWwra3n3GAkGsoTI5wKBkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACOcCgZjmwoS7mhdYDn2ca28ubYzezcycXr2MTF8NrLzfHc0Nfy3dPk7sm67eOfiPHioYjq7c++2vHj
        1dLv1sfS68Wx2eawmubmsZvj6su20O7czMnx49fO5dbCtrmfc4CObChLjnAoGQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI5wKBmObChLuqB0f+fZyLby5tvO7t7Nye3Yxszv1MXY8tnM3/Xm3eL04tnh79DC3O7P
        wNjx39PS8ePXzu7by8vs0LzQ68Gt3erBrt3s0b7P7t7MyvHj18/l1sK2uKByf45sKEuOcCgZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjnAoGZBuKUq6oXV+59rItfLn28/u39DK7dXC0O/JuODxzsDn9uTb4/jt
        5t327OTT9OPW0vDQwNjvy7vX7dPBz+3Twc/tzLnW68261OzVwcvu3MrJ8ePWzuXXwrW6oXN+kG4pSo5w
        KBkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACOcCgZkHEsSrqjd37n2si18ufbzu7fzsnsz7rR7bij5e69
        qe3118zo9+fd4PXp4dby08XZ66eP6umih+3swKvg7tC+1uzRvc/q0r/J6tTAxOvZx8bx4tTN5dfDtbqh
        dX6QcSxKjnAoGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR0KhiSby1Ju6N4fefayLXx5tnO7t3Lx+zN
        uc7su6Xi7rql7fLIt+30zsDp8s/A4O+5pOXplHb26I5x+Ourku3twKvf7M+8zuvWw8Xo1L7C69nExPHi
        083l18O1u6F2fZJvLUmUdCoYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlHQqGJRxLki7o3h96NrJtfLm
        2M3s2sjF69O/ye/OvtnwxLLn8LSf8e+pkPXtn4X065Z69emOcProjW376pJz+OqkiOztxrLV7drGyOrW
        wcPr2cTE8eLTzefXw7W7o3Z9lHEuSJR0KhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUdCoYlHEuSLuk
        eXzo2sm18uTYzevayMTr1sPF8drL0fLRwN7xvKft762V9O2gh/Psl3r16pBy+uqPb/vrk3T466SI7O3G
        stXt2sbI6tbBw+vZxMTx4tPN59fDtbuid3yUcS5IlHQqGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR0
        KhiTci5HvaR5fOjaybXy5NjN69rIxOzXw8Lu3M3J8t/S0/Td0eD02szk89LD3/C8p+XumXz27JV2+O6t
        lO3uwavf7M+8zuvWw8Xo1L7C69nExPHi083n18W1u6R3fJNyLkeUdCoYAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlHQqGJNyLke8pXp76NvJtPLk2M3r2sjE69fDwe/ezcXy5trN9u/o2Pfy69r27OTR89TE1u+s
        kunup4zs8MOu3+/TwdPt1MDI6dS/wujTvsHr2cTE8eLTzebXxLS8o3h7k3IuR5R0KhgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACQbiwXlXQvRr6le3ro28m08uTYzevayMTr18PB797NxfLk2cz27+fX9u/o1vPp
        38vy39HK8M++0+/MudXu08LO7dfEyOvVwcPp077B6NS9wOvZxMTx4tPN5tfEtLyleXqVdC9GkG4sFwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJtuLBeVdC9Gvqd7eujbyrTy5NjN69rIxOvXw8Hv3s3F8uTZzPbu
        5db27+bU8+fcx/Dj1sLw49XG7+HRxu3bysPs18XC6dS/wejUvcDo1L3A69nExPHi083m2MS0vqV5epV0
        L0abbiwXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm24sF5dyMEW/pnx56NvKtPLk2M3r2sjE69fDwe/e
        zcXy5NnM9u7l1vbv5dTz5trF8OHSv/Dg0MDv3czB7NnIwOvXw8Dp1L/A6NS9wOjUvcDr2cTE8eLTzejY
        xrS9pnp5l3IwRZtuLBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbeSwXl3YwRb+ofHno28q08uTYzeva
        yMTr18PB797NxfLk2cz27uXW9u/l1PPm2cXw4dK97t7Nvu3cyr7s2cW/6tXBv+nUv8Do1L3A6NS9wOvZ
        xMTx4tPN6NjGtL+menmXdjBFm3ksFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJt5LBeWdDBEv6h8eejb
        yrTy5NjN69rIxOvXw8Hv3s3F8uTZzPbu5db27+XU8+bZxfDh0r3u3s2+7dzKvuzZxb/q1cG/6dS/wOjU
        vcDo1L3A69nExPHi083o2Ma0v6Z6eZZ0MESbeSwXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi2g5Fods
        NkKnlXJvzcKzn9TIvbPLvKusybimqsu8r63OxLqz08vEvM/KwbzHvbOzw7eqr8K1prDBsqWxwrKiscKy
        obHDs6CwxrOisMe2pK/MvKyx1Mi9tszBsaGok3Fwh2w2QotoORYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABmWT8UYVlEPGpiVF13cWp1c21pgGNdVX1dVU19XVdQfl5aVoFhXVqIXFlVjFNPSpBOSEOTTklDllFK
        RZdUTkmWWVRNlGBZUpFlXlePbWVejHZuZ4qAenWJfnpye2xnWmBiVkU+YVRIFQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFBQUBNPT086QEBAUy8vL2AeHh5mDAwMZgICAmYAAABmAAAAaQAAAG4AAAB1AAAAfgEB
        AYUDAwOIBwcHiQ0NDYgVFRWFGxsbgiQkJH4rKyt6MzMzdjw8PHJCQkJoSEhIWExMTDxMTEwUAAAAAAAA
        AAAAAAAA/gAAf/wAAD/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AB/4AAAf+AAAH/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//uAAf//+B/8oAAAAIAAAAEAAAAABAAgAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wsL
        C/8SEhL/GBcX/xsbG/8hHx//IiEh/yQiIf8mJCL/JSUl/ygmJf8qKCf/LSon/yopKP8tKij/Lywp/y0t
        LP80MS7/Nzc3/zg1Mv86NzX/Pzw3/z49Of9BPjr/QT09/0VCP/9aTzj/W1E7/3RdLv92XzH/SkZD/0tL
        S/9NS0r/TkxI/1JPTP9TUEv/VlJL/1hUTf9aV1T/XVZW/1tYUv9bWFT/XVpW/11bW/9qXUP/aV1E/2BX
        V/9jXFz/cWVO/29mU/9oYVr/aWNc/21lXP9xZlD/cGZU/2RjY/9sZGT/bmlj/2lpaf9xaGD/dm1j/3Fp
        af99c2P/eXBn/3Zybf96cWj/enRu/393bv97dnH/hWUm/4tpJf+HZyn/h2gp/45sKP+Qbir/k3Et/4Nq
        Ov+EbDz/k3Mz/5RzMP+WdDH/lXU2/5h2M/+YdzT/iHRM/5h9R/+ZfUj/kXxT/4B2Zv+CeW//hH5+/56A
        Rv+fgUj/ooRL/6WIT/+miVD/pYpV/6iKUv+pjFP/qYxU/4eAdv+HgHj/ioJ5/42Ge/+Si3//qpl+/9mC
        Zf/bjnP/3ZB1/+uTdf/gk3j/65Z4/+qbf/+DgoH/iIOB/5GGhv+QiYH/k4yA/5SMi/+ajY3/lZOT/5yU
        lP+dmJX/nJub/6qbgf+glJT/oZuW/6Obm/+qnZ3/uqWB/7+pgf+joJ7/qKGb/7Womv+1qZ3/uaiZ/7yr
        m/+/r5//o6Oj/6ulo/+qqKb/qqqq/7Klpf+wqqP/t6yh/7Grpf+yrKv/tbCr/720qv+4sq3/uLSv/7S0
        s/+6s7H/vLy8/9+agP/tnYH/wquE/8Oui//Eroj/xrCK/8axjP/Iso3/yrWQ/+yghf/ho4v/76OI/+yp
        j//kppD/46mS/+2tlP/nr5n/6K+Z/+WznP/tspz/8LSd/8Cxo//AtKL/w7Wn/8K1qf/Et6n/wres/8a5
        q//Dua//x7uv/8a8rv/Iuq3/yLyv/8W6sf/FvLP/w7y0/8a/t//LvrH/xLm5/+e2of/nuKP/67yl/+m+
        rP/xt6H/8bij//C+qf/Nw7n/3My2/9HGu//Syb//3c65/9/Quv/qwq3/8MKv/+vEsf/hzLf/7Mq2/+HN
        uf/iz73/7cy6//HFs//zyLf/8cy7/+HSvP/r0r7/z8nD/9HKxP/wz8H/4tHA/+TTwf/k1cD/49TE/+XV
        xP/r1cH/7NjE/+bWyP/m2Mn/59vO/+jZy//t2sj/7tzK/+/bzP/t3c3/8dTF//Hbzf/p3tL/7t/Q/+vf
        1f/y3tH/7uDR/+rg1v/s49r/7eTb/+7l3f/y4tT/8+TZ//To3f/27OP/AAAA/wAAAP8AAAD/AAAA/wAB
        AAEBAwkNDQ0JCQkGBgYGBQUICAoLDA4HAwEBAQEAAAECAgUWKzo6Nzc3Ny8rJycuLi8vMzg9PS8WBQIB
        AgAABAQEEjp4jI2Kg3t7eHZ2c3N2d31/gI6OeTkVBAQEAAALCxAfcY2ZmZmXl42Mg3l5en+AjpKYwMCR
        Wh8QEA0AABUVFytyjJmXk42NjIN6eXZ3d3p/i5GYmIxyKBcVFQAAGxsbNnWMlpaTk5KSjIN6enp6foSG
        kZOWj2gxGxobAAAcHB1UfLjLysjI3NzbyL67tLeztbm/y8q1aVQdHBwAAEVFSFWCyebk5ebx9/bx5+Lg
        2dnZ09ng5smCW0hFRQAARkVJXILN8Ozk+Pn7+/ns+Ozq5OPg4+Tq0YJbRkZGAABGRklcnNnz6uru+Pny
        1dXj7uTk5Nrj6uzNgltKRkYAAEZJSVyC2fDs6uzy7cSnqM7j5OPa4+Pk6s2cXEZGRgAASUlJXZzZ8O7k
        7uPEp2tspMLEztHa4OrqzZxcS0ZJAABJSUtdntnz6u7p1adramprmqSsztLj6urNnF1JSkYAAEpJSV2c
        2fPs7OrQqWtqamyapKjC0Nrk6tmcXUtGSwAASUpLXp7Z8+rk7t3Ep25up8HDwcHD0urq0Z5dS0tGAABJ
        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
        T00oKChmBQUFZgAAAGYAAABwAAAAgwUFBYoSEhKHHx8fgDAwMHhCQkJwTExMUAAAAAAAAAAA4AcAAOAH
        AADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA/h8AACgA
        AAAQAAAAIAAAAAEACAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AQEB/wICAv8DAwP/BQUF/wYG
        Bv8SEhL/Hx8f/yAgIP8oKCj/MTEx/0FBQf9HR0f/Tk5O/3h4eP98fHz/iWcj/4tpJf+Nayf/jmwo/5Bu
        Kv+Rbyv/k3Et/5RyLv+Vcy//lnQw/5d1Mf+YdjL/zmhG/9NtS//UcE7/2XNR/9d8Xf/lf13/24pt/+qE
        Yv/qhmX/7ohm/+uQcf+AgID/jIyM/4+Pj/+ZmZn/m5ub/6mpqf+5qKj/uq+v/+OdhP/un4T/7KeP/8Kw
        sP/Qvr7/7cez/+3Pvf/wzr3/6dS+/+rUvv/y0L//xsTE/8jIyP/fzc3/0dHR//HPwP/t08L/7NfD/+zY
        xP/s2sf/7dvI/+7byf/u3Mr/7t3M/+/ezf/x1cr/89fM//Tcz//v3d3/8ODR//Hh1P/x49T/8uPW//fh
        2P/y5dj/8+bZ//To3P/16d7/9ere/+Hh4f/16+H/9uzi//bt5P/58+z/+vTu//////8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/XFwEAgEAAAABAQICAwRcXFxc
        B1Y9OzouLTIzPEsIXFxcXAwsKyopDw4nKCssDFxcXFwQVzdNW05HQTg3UxBcXFxcEVdATltVTEE4N1MR
        XFxcXBJXOE9IHFRGODdTElxcXFwTVzhSHSAeIj83UxNcXFxcFFc4T0kfVDUvQlMUXFxcXBVXRj5bWFNF
        NENTFVxcXFwWV0MxUFkhNkA3UxZcXFxcF1c3SjAkJiNHN1MXXFxcXBhXN01bWSU5QDdTGFxcXFwZV0BN
        WlFSRDg3UxlcXFxcGlc4TVpOR0E4N1MaXFxcXBtXOE1aTkdBODdTG1xcXFwNCQQAAAAFBggKCw1cXOAH
        AADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAOAHAADgBwAA4AcAAP4f
        AAA=
</value>
  </data>
</root>