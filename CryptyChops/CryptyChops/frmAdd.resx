<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAAAAEAIACoEAAARgAAACAgAAABAAgAqAgAAO4QAAAQEAAAAQAgAGgEAACWGQAAEBAAAAEA
        CABoBQAA/h0AACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGYACgBgAB0AXQApAF8AMABf
        ADMAXwAzAF8AMABdACkAYAAdAGYACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAdAl4AVgJe
        AHwBXACPAV0AmQFdAJkBXACPAl4AfAJeAFYAYAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABj
        ACkCYgB8BWwBswh6AswKgQTZCoEE2Qh6AswFbAGzAmIAfABjACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABWoAMAVpAI8LgwLMFqsJ5hu9DPIbvQzyFqsJ5guDAswFaQCPBWoAMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAFcwAzBnEAmQ+OBNkcvwzyItUR/yLVEf8cvgzyDo4E2QZxAJkFcwAzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAp4ADMIeQCZEJEE2R28DfIizxH/Is8R/xy7DPIQkQTZCHkAmQp4
        ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACn0AMwl+AJkQlATZHbkN8iPJEv8iyRH/HbkM8hCU
        BNkJfgCZCn0AMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKggAzC4EAmRGVBNketQ7yJMMT/yPD
        Ev8dtQ3yEZUE2QuBAJkKggAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHADMLhQCZEpUF2R+x
        D/IlvRT/Jb0U/x6xDvISlQTZC4UAmQqHADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocAMwuG
        AJkTlgXZIa0R8ie4Fv8mtxX/H6wP8hOVBdkLhgCZCocAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZAAoRjAAdDI8AKQ+PADAPjAAzD4wAMw+MADMPjAAzD4wAMw+M
        ADMOjABZDIoAphWWB9kiqhLyKbMY/yiyF/8hqBHyFZUF2QyKAKYOjABZD4wAMw+MADMPjAAzD4wAMw+M
        ADMPjAAzD48AMAyPACkRjAAdGZkACgAAAAAAAAAAEYwAHQ6OAFYOjQB8DowAjw2NAJkNjQCZDY0AmQ2N
        AJkNjQCZDY0AmQyLAKYNjAC/FpYH2SSnFfIrrxr/Kq4Z/yOmEvIWlgfZDYwAvwyLAKYNjQCZDY0AmQ2N
        AJkNjQCZDY0AmQ2NAJkOjACPDo0AfA6OAFYRjAAdAAAAAAAAAAAMjwApDo8AfBOUBbMfnRDMI58T2SKd
        EtkgnRHZIJ0R2SCdEdkgnRHZH50Q2R+cENkkoRTiK6oc9S+uHv8trBz/J6UW9R2aDeIXlAnZF5QI2RaS
        B9kWkgfZFpIH2RaSCNkXlAjZF5UJ2RaTB8wRkQKzDo8AfAyPACkAAAAAAAAAAA+PADAOkACPIJ4QzDy2
        LeZGvzbyQ7sy8kK6MfJCujHyQbox8kG6MfJAuS/yPrct8ju0KvU3sij8Na8k/zGrIP8tpx38KqQa9Sii
        GPIloBbyJJ8V8iSeFPIknhTyJZ8V8iahF/IqoxnyJJ8V5haWB8wOkACPD48AMAAAAAAAAAAAD5EAMw6S
        AJkkpBXZScM48ljPR/9TykL/UchA/1HIQP9Qxz//UMc//0/GPv9NxDz/SL83/0K5Mf89tCz/ObAo/zev
        Jv84ryf/N68m/zWtJP80rCP/M6si/zOrIv80rCP/Nq0l/ziwJ/8wqh/yG5sK2Q6SAJkPkQAzAAAAAAAA
        AAAPlgAzDpQAmSWmFtlLxjvyWtFJ/1bNRf9TykL/U8pC/1LJQf9SyUH/UchA/1DHP/9NxDz/ScA4/0a9
        Nf9EuzP/RLsz/0a9Nf9Hvjb/Rr01/0W8NP9EvDP/RLsz/0S7M/9FvDT/Rr01/zu1KvIfoA/ZDpQAmQ+W
        ADMAAAAAAAAAAA+UADAQlQCPIaURzEC9L+ZLxjvyR8I28kXANPJFvzTyRL8z8kS/M/JEvjLyRL4y8kW/
        NfVKwzn8TMM7/0zDO/9IwTf8Q74y9UG7MPJBuzDyQLov8kC6L/JAui/yP7ou8j+6LvJAui/yNrMl5h6h
        DcwQlQCPD5QAMAAAAAAAAAAAEpUAKRCYAHwWngWzIacRzCWqFdkkqRPZJKgS2SSoEtkkqBLZJKgS2SSo
        EtkkphLZMLEe4kbANvVRyED/UMc//0W/NfUvrh7iI6UR2SOlEdkipRDZIqUQ2SKlENkipRDZIqUQ2SKl
        ENkfog3MFZwFsxCYAHwSlQApAAAAAAAAAAARngAdEZoAVhCaAHwRmQCPEJkAmRCZAJkQmQCZEJkAmRCZ
        AJkQmQCZEJkAphGZAL8kqRPZRsE18lXMRP9Uy0P/RL8z8iSpEtkRmQC/EJkAphCZAJkQmQCZEJkAmRCZ
        AJkQmQCZEJkAmRGZAI8QmgB8EZoAVhGeAB0AAAAAAAAAABmZAAoRngAdEpsAKQ+aADAPmwAzD5sAMw+b
        ADMPmwAzD5sAMw+bADMRmgBZEJwApiWrFdlIwzfyWM9H/1fORv9HwjbyJasT2RCcAKYRmgBZD5sAMw+b
        ADMPmwAzD5sAMw+bADMPmwAzD5oAMBKbACkRngAdGZkACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABSgADMSngCZJq0W2UvIO/Jb0kr/W9JK/0rHOfImrRXZEp4AmRSg
        ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFKAAMxKhAJkpsBfZT8s+8l/WTv9f1k7/Tco98imw
        FtkSoQCZFKAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUoAAzEqEAmSqyF9lSzUHyY9pS/2Pa
        Uv9SzUDyKrIX2RKhAJkUoAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSlADMSowCZK7QY2VXR
        RPJn3lb/Z95W/1XQQ/IrtBjZEqMAmRSlADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFKUAMxOk
        AJkstxnZWNRG8mviWv9r4lr/WNRG8iy3GdkTpACZFKUAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAUpQAzE6YAmS24G9lb2Unyb+Ze/2/mXv9a2EnyLbgb2ROmAJkUpQAzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABWqADATpwCPKrYWzE3RO+Zd20vyXNtK8k3QO+YqthbME6cAjxWqADAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEqcAKRSoAHwcrwizKrcWzDC8HNkwvBzZKrcWzByvCLMUqAB8EqcAKQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARpwAdFKkAVhSqAHwVqQCPFakAmRWpAJkVqQCPFKoAfBSp
        AFYRpwAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmyAAoRpwAdEqcAKRWqADAUqgAzFKoAMxWq
        ADASpwApEacAHRmyAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/////////////D////gf///wD///8A////AP///wD///8A////AP///wD///8A//8AAAD+AA
        AAfAAAADwAAAA8AAAAPAAAAD4AAAB/AAAA//8A////AP///wD///8A////AP///wD///8A////AP///4
        H////D////////////8oAAAAIAAAAEAAAAABAAgAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wJd
        AP8CXgD/A2EA/wRiAP8EZQD/BGYB/wVpAv8GagD/BmwC/wdxAP8HcgD/CHQC/wl4AP8KfQL/Cn4A/wuC
        AP8MgwH/DIUA/wyGAP8MgwX/DYgA/w6IAv8NigD/DooC/w6MAP8OjgD/DYkF/w6LBv8QjgL/DpAA/w+S
        AP8QkAL/EpAD/xCTAP8QlAD/EpQD/xCWAP8RlwD/EpAE/xKSBP8Ukwb/EZYG/xWUB/8VlwX/FpcH/xGY
        AP8RmgD/EpoB/xSbA/8SnAD/E58B/xScA/8Tmgf/FpoF/xScB/8VnAX/F50H/xeeBv8Ynwf/FpQI/xmW
        Cv8algv/G5cM/xaaCP8VnAj/GpkL/xiaCf8amgv/GZwJ/xmfCP8bmAz/HJkN/x2dDv8gnxD/IZ4R/yOf
        E/8ToQD/E6MA/xShAf8UowH/FKQA/xWlAf8UpgD/FaYB/xmgB/8UqAD/FagA/xWqAP8WqgH/GawF/xqt
        Bf8Uogn/GaAI/xqgCf8aogj/G6UJ/x2iDP8dpAz/HKgK/x2qCv8erAv/H60L/x2uCf8frwv/Hq4P/x6w
        Cf8Ysgz/HbIO/x6yDv8ZtAz/GrUM/xu3Df8ctQ3/HLgN/yCxC/8jsw//IaQR/yOkE/8iphL/I6YT/ySh
        Ff8moBb/JKMV/yaiF/8ophf/IagR/yKpEv8gqxD/JagV/yepFv8nqhb/KKoX/yejGP8oohj/KKQZ/ymm
        Gf8sphv/KasY/yuqG/8prRn/Kq0Z/yutGv8qrhr/LK4b/y6pHf8tqx3/L6oe/yysHP8trBz/La4c/y+u
        Hv8wrx//J7EW/yW1Ff8mtRX/KLEX/yS6E/8ivxL/LbAb/y2xHP8usB3/L7Md/y+7HP8xth//MLwc/zOt
        Iv81rST/Na4k/zauJf80sCP/NrAl/zewJ/82sib/NrQl/ze2Jv84sSf/OLIn/zO4IP80uyL/Nbsi/za9
        I/82viP/ObEo/zqzKf87syr/ObUo/zu0K/86tin/O7cq/z22Lf8+ti3/P7cu/zm4KP89uCz/Prgu/z+4
        Lv9AuS//Qbkw/0C6MP9BujD/Qrox/0O6Mv9EuzP/Qbww/0K9Mv9CvjH/Q74y/0S+M/9FvzP/Rr01/0a+
        Nf9Ivzf/H8gP/yLFEf8hyhD/N8Ek/0TAM/9FwTP/RsA1/0XCNP9HxDb/SMU3/0bKM/9JwTj/SsI5/0vD
        Ov9MxDv/TMQ8/03FPP9Oxj3/T8c+/0vIOf9PyD//Tss8/07MPP9QyD//Uc4//1HJQP9RykD/UspB/1TM
        Q/9Xz0b/UtJA/1PSQf9U0kL/VNRC/1fQRv9b00r/XtdN/1/XTv9i21H/ZN9T/2XfU/9m3lX/AAAA/wAA
        AAAAAAAAAAMCAwECAgIBAgEBAwMDAAAAAAAAAAAAAAAAAAAAAAAAAgMCAwICAgICAwMCAgIAAAAAAAAA
        AAAAAAAAAAAAAAADAwMEBwcJCQcGBAMDAwAAAAAAAAAAAAAAAAAAAAAAAAYGBQgMFBscFAwHBQYGAAAA
        AAAAAAAAAAAAAAAAAAAACAcIDBtca2tcGwwJCAgAAAAAAAAAAAAAAAAAAAAAAAAKCgwOKnDX1W4qDgsK
        CwAAAAAAAAAAAAAAAAAAAAAAAA0NDRE1ctfXcDURDQ0NAAAAAAAAAAAAAAAAAAAAAAAADw8PFkFt1tZx
        NxUPDw8AAAAAAAAAAAAAAAAAAAAAAAAQEBIYQW2enmw5HBIQEAAAAAAAAAAAABoaGhoaGRoZGhgSExxB
        aZ2daUAZExMVGRkZGhkaGhoaGhoaGhkaGRoZGRkVHUOAm5qAQB0WGBoaGhoZGhoaGhoaGhoaGh0aGhoa
        GBkhQH+cmX5DHRkZGRkZGRoZGhoaGh4aHiErPD08PDw8PDxJgY+Md0QpICAhISEnJyAeGh4eHh4oQnmI
        h4eHh4d5fIiSl5WIS0g+Pz4+Pz9HPSkiIB4eHy17rcfHxMPCwr67u7GrppOJhoV6enp6hoZMRyQeHiMj
        Q4vO6e7m5eXk5ODTyL+5t7Cwqainp6epqZFKLCMjIyVFlNDv8Ozn5+bl4uHU08vKycbHxMDAwMS/qnY2
        IyMuLjqDwdnZz8/MzMzN0ODi4dvMwry9vLy8vLqYdTYuLi4uOGGDkJaQj46UjZ+u2+bm0a6OioqKhISE
        g3deMS4uLi8wODtfX15dXV1dYqLc7+7PlmJGO11GOzs7OjQwLy4vLy8vMDAwMDAyMjJVoNzx8dqfVTIy
        MDAwMDAvLy8vLy8vLy8vLy8vLy8yM2Ci3vf33aJgMzIvLy8vLy8vLy8vLy8vLy8vLy8vMk1PY6To+Pjo
        pGNPTTIvLy8vLy8vLy8AAAAAAAAAAABOTlBksuv6+eqyZFBOTgAAAAAAAAAAAAAAAAAAAAAAAFFRUma0
        7fv77bNmUlFRAAAAAAAAAAAAAAAAAAAAAAAAU1NUabb1/v70tWlUU1MAAAAAAAAAAAAAAAAAAAAAAABW
        VldotvT9/PO2aFdWVgAAAAAAAAAAAAAAAAAAAAAAAFZWWGej3/b236NnWFZWAAAAAAAAAAAAAAAAAAAA
        AAAAV1dXWnSl2NildFpXV1cAAAAAAAAAAAAAAAAAAAAAAABYWFhZW2pzc2pbWVhYWAAAAAAAAAAAAAAA
        AAAAAAAAAFhYWFhYWVlZWVhYWFhYAAAAAAAAAAAAAAAAAAAAAAAAWFhYWFhYWFhYWFhYWFgAAAAAAAAA
        AAD////////////8P///+B////AP///wD///8A////AP///wD///8A////AP///wD//wAAAP4AAAB8AA
        AAPAAAADwAAAA8AAAAPgAAAH8AAAD//wD///8A////AP///wD///8A////AP///wD///8A////gf///8
        P////////////ygAAAAQAAAAIAAAAAEAIAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAA14AmQJcAMwCXADMA14AmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZsAMwi2BH/ItgR/wZsAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKfQDMI80S/yLMEf8KfQDMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIQAzCXAFP8kwBP/DIQAzAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyJAMwpthj/J7QW/wyJAMwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADY0AmQ2NAMwNjQDMDY0AzA2NAMwNjQDMLa4c/yusGv8NjQDMDY0AzA2N
        AMwNjQDMDY0AzA2NAJkAAAAAAAAAAA+SAMxZ0Ej/UMc//1DHP/9Pxj7/SsE5/zuzKv8xqSD/Makg/yyl
        G/8roxr/LaUc/zOrIv8PkgDMAAAAAAAAAAAQlgDMXtVN/1XMRP9Uy0P/U8pC/1LJQf9Lwjr/SsE5/0/G
        Pv9OxT3/TcQ8/0zDO/9OxT3/EJYAzAAAAAAAAAAAEJkAmRGZAMwRmQDMEZkAzBGZAMwRmQDMVMtD/1LJ
        Qf8RmQDMEZkAzBGZAMwRmQDMEZkAzBCZAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZ0AzFrR
        Sf9Z0Ej/EZ0AzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKi
        AMxi2VH/YdhQ/xKiAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAUpQDMaeBY/2ngWP8UpQDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFKcAzHLpYf9x6GD/FKcAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABWpAJkVqgDMFaoAzBWpAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAPw/
        AAD8PwAA/D8AAPw/AAD8PwAAgAEAAIABAACAAQAAgAEAAPw/AAD8PwAA/D8AAPw/AAD8PwAA//8AACgA
        AAAQAAAAIAAAAAEACAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAACXQD/A18A/wNgAP8GbQD/Cn0A/zt/
        Mv8MgwD/DIQA/w2IAP8OigD/DowA/w6OAP8PkgD/EJYA/xGaAP8SnAD/Ep4A/xOiAP8UpQD/FKgA/xWp
        AP8VqgD/K6Ma/yylG/8tpRz/K6wa/y2uHP8ntBb/KbYY/zGpIP8zqyL/O7Mq/yTAE/8lwBT/IswR/yPN
        Ev8i2BH/SsE5/0vCOv9Mwzv/TcQ8/07FPf9Pxj7/UMc//1LJQf9TykL/VMtD/1XMRP9Z0Ej/WtFJ/17V
        Tf9h2FD/YtlR/2ngWP9x6GD/culh//////8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/ODg4ODg4ODg4ODg4ODg4ODgK
        AgICAgEAAAECAgICCjg4CwcDAwMDJCQDAwMDBgs4OAoKCAQEBCMiBAQECAoKODgLCgoJBwchIAcHCQoK
        Czg4CgoKCgoJHBsJCgoKCgo4OAsKCwsKChoZCgoKCwsLODgMMCorKiUfHR0XFhgeDDg4DTIvLS0sJiUq
        KSgmKA04OA4ODg4ODi4sDg4ODg4OODgODw8PDxAxMBAPDw8PDjg4Dg4ODxERNDMREQ8ODg44OA4PEBIS
        EjU1EhISEA8OODgOEBMTExM3NhMTExMQDjg4BRQUFBQVFRUVFBQUFA44ODg4ODg4ODg4ODg4ODg4OP//
        AAD8PwAA/D8AAPw/AAD8PwAA/D8AAIABAACAAQAAgAEAAIABAAD8PwAA/D8AAPw/AAD8PwAA/D8AAP//
        AAA=
</value>
  </data>
</root>